{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This website answers some common questions about MPS and shows common gotchas and pitfalls when working with MPS. It is mainly written in the form of a QA. If you have any suggestions, please write a comment at the bottom of the page or open an issue on Github. If you are not already a member, consider joining MPS on slack . A twitter user \"6 hours of debugging can save you 5 minutes of reading documentation.\"","title":"Welcome"},{"location":"clean_code/deprecation/","text":"Don't use commands from the access language without a repository (see: access language ). Don't use node/myNode . Use node-ptr (myNode).resolve(repository) instead. Don't use model/myModel . Use model-ptr (myModel).resolve(repository) instead. Don't use module/myModule or language-module . Use module-reference/myModule instead. Don't use linkNode/concept:link/ . Use link:concept:link/ instead. Don't use conceptNode/concept/ . Use concept/concept/ instead. Don't use node.delete . Use node.detach instead. Don't use node.containingRole . Use node.getContainmentLink instead. Don't use interface the IDontSubstituteByDefault . Create an empty default substitute menu for the concept instead. Don't use print , System . out or System . err for logging. Use log for low-level logging or message for high-level logging instead. Use the explicit presentation of a node when using in a string e.g. \"my node: \" + node . getPresentation () instead of \"my node: \" + node . Don't use counter variable in LoopMacro. Use LOOP index in code instead. Don't use IOperationContext . More info can be found in the attached comment of the interface. Avoid getting the repository from the currently opened project or using the global repository. The code might break in the future.","title":"Deprecation"},{"location":"clean_code/programming_principles/","text":"Programming principles \u00b6 These are some general programming principles taken from this article which can also be applied to MPS: KISS (Keep It Simple, Stupid) \u2014 You may notice that developers at the beginning of their journey try to implement complicated, ambiguous design. DRY (Don\u2019t Repeat Yourself) \u2014 Try to avoid any duplicates, instead, you put them into a single part of the system or a method. YAGNI (You Ain\u2019t Gonna Need It) - If you run into a situation where you are asking yourself, \u201cWhat about adding extra (feature, code, \u2026etc.) ?\u201d, you probably need to re-think it. Clean code over clever code \u2014 Speaking of clean code, leave your ego at the door, and forget about writing clever code. Avoid premature optimization \u2014 The problem with premature optimization is that you can never really know where a program\u2019s bottlenecks will be until after the fact. Single responsibility \u2014 Every class or module in a program should only concern itself with providing one bit of specific functionality. Fail fast, fail hard \u2014 The fail-fast principle stands for stopping the current operation as soon as any unexpected error occurs. Adhering to this principle generally results in a more stable solution General Java design patterns can be found here (very nice illustrations).","title":"Programming principles"},{"location":"clean_code/programming_principles/#programming-principles","text":"These are some general programming principles taken from this article which can also be applied to MPS: KISS (Keep It Simple, Stupid) \u2014 You may notice that developers at the beginning of their journey try to implement complicated, ambiguous design. DRY (Don\u2019t Repeat Yourself) \u2014 Try to avoid any duplicates, instead, you put them into a single part of the system or a method. YAGNI (You Ain\u2019t Gonna Need It) - If you run into a situation where you are asking yourself, \u201cWhat about adding extra (feature, code, \u2026etc.) ?\u201d, you probably need to re-think it. Clean code over clever code \u2014 Speaking of clean code, leave your ego at the door, and forget about writing clever code. Avoid premature optimization \u2014 The problem with premature optimization is that you can never really know where a program\u2019s bottlenecks will be until after the fact. Single responsibility \u2014 Every class or module in a program should only concern itself with providing one bit of specific functionality. Fail fast, fail hard \u2014 The fail-fast principle stands for stopping the current operation as soon as any unexpected error occurs. Adhering to this principle generally results in a more stable solution General Java design patterns can be found here (very nice illustrations).","title":"Programming principles"},{"location":"clean_code/baselanguage/general/","text":"Information about general code smells can be found here . Be aware of common Java gotchas . Avoid acronyms and abbreviations that may not be clear to others. Methods and variables should be named after what they mean. Before giving a name, consider what is the responsibility of that piece of code. 1 Return empty collections instead of returning null elements ( reference ). It saves the efforts needed for testing on null elements. Efficiency: Use StringBuilder or StringBuffer for String concatenation Refactor your code regularly , especially when your classes or methods become too big. 2 , 3 . Remember to check parameters of public methods for illegal values. These methods shouldn't crash because of a NullPointer. Order class members by scope from private to public 4 , 5 (the reserve order is also fine ) Minimize the accessibility of class members. It enforces information hiding or encapsulation . Avoid hardcoded values. Use lazy initialization if performance is critical or use caching if necessary. Utility and Helper classes \u00b6 Utility class = only static methods and stateless. Don't create an instance of such a class. Helper class = can be a utility class, or it can be stateful or require an instance be created. It can be any class whose design is to aid another class. Try to make the name of the utility or helper class more specific (e.g. AdministrationHelper , LoginHelper instead of Helper ). Additional tips \u00b6 If you use functional interfaces, use the standard java ones . If you want to understand the functional style, consult this page. If you want to use newer Java features, have a look at this page. Have a look at common sources of complexity . Naming 101: Programmer\u2019s Guide on How to Name Things \u21a9 Rule of 30 \u2013 When is a Method, Class or Subsystem Too Big? \u21a9 Avoid basic style errors \u21a9 Ordering Class Members by Scopes \u21a9 Separate public and private members \u21a9","title":"General"},{"location":"clean_code/baselanguage/general/#utility-and-helper-classes","text":"Utility class = only static methods and stateless. Don't create an instance of such a class. Helper class = can be a utility class, or it can be stateful or require an instance be created. It can be any class whose design is to aid another class. Try to make the name of the utility or helper class more specific (e.g. AdministrationHelper , LoginHelper instead of Helper ).","title":"Utility and Helper classes"},{"location":"clean_code/baselanguage/general/#additional-tips","text":"If you use functional interfaces, use the standard java ones . If you want to understand the functional style, consult this page. If you want to use newer Java features, have a look at this page. Have a look at common sources of complexity . Naming 101: Programmer\u2019s Guide on How to Name Things \u21a9 Rule of 30 \u2013 When is a Method, Class or Subsystem Too Big? \u21a9 Avoid basic style errors \u21a9 Ordering Class Members by Scopes \u21a9 Separate public and private members \u21a9","title":"Additional tips"},{"location":"clean_code/baselanguage/java_style_guide/","text":"These are some points taken from the Google Java Style Guide that make sense in MPS. Fall-through: commented : Write a comment why a fall-through is used in a switch statement. Default case is present : Always write a default case for switch statements. Rules common to all identifiers : Identifiers use only ASCII letters and digits, and, in a small number of cases noted below, underscores. Special prefixes or suffixes are not used. For example, these names do not adhere to the style: name_, mName, s_name and kName. Package names : Package names are all lowercase, with consecutive words simply concatenated together (no underscores). For example, com.example.deepspace , not com.example.deepSpace or com.example.deep_space Class names : are written in UpperCamelCase. Class names are typically nouns or noun phrases. For example, Character or ImmutableList . Interface names may also be nouns or noun phrases (for example, List ), but may sometimes be adjectives or adjective phrases instead (for example, Readable ). Test classes are named starting with the name of the class they are testing, and ending with Test. For example, HashTest or HashIntegrationTest . Method names : are written in lowerCamelCase. Method names are typically verbs or verb phrases. For example, sendMessage or stop. Underscores may appear in JUnit test method names to separate logical components of the name, with each component written in lowerCamelCase. One typical pattern is _ , for example pop_emptyStack . There is no one correct Way to name test methods. Constant names : Use all uppercase letters, with each word separated from the next by a single underscore Non-constant field names : Non-constant field names (static or otherwise) are written in lowerCamelCase . These names are typically nouns or noun phrases. For example, computedValues or index . Parameter names are written in lowerCamelCase . One-character parameter names in public methods should be avoided. Local variable names are written in lowerCamelCase. Even when final and immutable, local variables are not considered to be constants, and should not be styled as constants. Type variable names : Each type variable is named in one of two styles: A single capital letter, optionally followed by a single numeral (such as E , T , X , T2 ) or a name in the form used for classes, followed by the capital letter T (examples: RequestT , FooBarT ). Camel case: defined : tutorial on how to write camel case Don't ignore caught exceptions (see also: Avoid empty catch blocks ) Additional java practises can be found at javapractices.com .","title":"Java Style Guide"},{"location":"clean_code/mps/general/","text":"This document lists some recommendations for code written it MPS. Before reading this document, read the mbeddr Development Guide . It describes how git is used in the mbeddr project for contributing changes, and it also provides some general guidelines ( commit messages , branches , merging , test organization etc.). Readability/Maintainability \u00b6 Use enhanced for loops instead of for loops with counters: for ( type variable : iterable ) and foreach variable in iterable Mark classes/concepts etc. as deprecated when they shouldn't be used: DeprecatedNodeAnnotation DeprecatedBlockDocTag Java Deprecated annotation Use the text TODO in comments. These strings can be found with the TODO tool. Check for redundant variable initializers (typesystem warning). Use empty lines between statements (for example method declarations) for readability. Use virtual packages to organize your code. Null safety \u00b6 Use language checkedDots for saver access of possible null values. Nodes can be checked for null: node.isNull Use annotation @NotNull and @Nullable for baselanguage code. There is a typeystem rule in MPS that checks these annotations. Use :eq: (NPE-safe equals operation) and :ne: NPE-safe not equals operation instead of == and equals . Return optional values instead of null in baselanguage code 1 . Exceptions \u00b6 Use checked exceptions for recoverable conditions and run-time exceptions for programming errors 2 , 3 . Consider alternative ways of showing errors than throwing exceptions such as showing notifications . Examples for such notifications are balloons and dialogs. Attach throwable objects to logging statement if available: log error \"This is an error\" , errorObject Clean up in the finally block of a try statement. Swing components \u00b6 Use components from the intellij platform. Some additional components can be found here . Use the intellij platform ui guidelines to create consistent and usable user interfaces. Capitalization: almost all short textual items (menus, buttons, labels, for example) should have headline capitalization, where all words are capitalized except for common words with up to three letters (a, an, the, and, or, so, yet, etc.), and do not appear as the first or last word. If the text is not short, then the capitalization used in ordinary prose (sentence capitalization) should be used instead. Read the Swing tutorials to get a better understanding of the components. Return Optional not null \u21a9 Java Best Practices Quick Reference \u21a9 Checked versus unchecked exceptions \u21a9","title":"General"},{"location":"clean_code/mps/general/#readabilitymaintainability","text":"Use enhanced for loops instead of for loops with counters: for ( type variable : iterable ) and foreach variable in iterable Mark classes/concepts etc. as deprecated when they shouldn't be used: DeprecatedNodeAnnotation DeprecatedBlockDocTag Java Deprecated annotation Use the text TODO in comments. These strings can be found with the TODO tool. Check for redundant variable initializers (typesystem warning). Use empty lines between statements (for example method declarations) for readability. Use virtual packages to organize your code.","title":"Readability/Maintainability"},{"location":"clean_code/mps/general/#null-safety","text":"Use language checkedDots for saver access of possible null values. Nodes can be checked for null: node.isNull Use annotation @NotNull and @Nullable for baselanguage code. There is a typeystem rule in MPS that checks these annotations. Use :eq: (NPE-safe equals operation) and :ne: NPE-safe not equals operation instead of == and equals . Return optional values instead of null in baselanguage code 1 .","title":"Null safety"},{"location":"clean_code/mps/general/#exceptions","text":"Use checked exceptions for recoverable conditions and run-time exceptions for programming errors 2 , 3 . Consider alternative ways of showing errors than throwing exceptions such as showing notifications . Examples for such notifications are balloons and dialogs. Attach throwable objects to logging statement if available: log error \"This is an error\" , errorObject Clean up in the finally block of a try statement.","title":"Exceptions"},{"location":"clean_code/mps/general/#swing-components","text":"Use components from the intellij platform. Some additional components can be found here . Use the intellij platform ui guidelines to create consistent and usable user interfaces. Capitalization: almost all short textual items (menus, buttons, labels, for example) should have headline capitalization, where all words are capitalized except for common words with up to three letters (a, an, the, and, or, so, yet, etc.), and do not appear as the first or last word. If the text is not short, then the capitalization used in ordinary prose (sentence capitalization) should be used instead. Read the Swing tutorials to get a better understanding of the components. Return Optional not null \u21a9 Java Best Practices Quick Reference \u21a9 Checked versus unchecked exceptions \u21a9","title":"Swing components"},{"location":"clean_code/mps/misc/","text":"Don't invoke special functionality in MPS at places that don't officially support it e.g. invoking the generator in typesystem rules. This might not working in future versions of MPS. Treat warnings in MPS as errors 1 and also don't ignore warnings and errors. Warnings might become errors or even make the compilation fail in the future. Ignoring too many messages can hide real errors that have to be addressed. Use the access language instead of directly calling ModelAccess methods. Use isInstanceof to check if a node is an instance of a concept. Use tasks for asynchronous work or work that takes a long time. Be careful when using unicode inside MPS. It might break something. ( ticket #1 , ticket #2 ) Use gradle for build scripts ( minimal example ). Write tests for new features and bugs that you have fixed that were not caught by a test Use the built-in collection classes such as collection, set, list and map ( documentation ). Use the correct type of collection 2 . Be careful with multithreading code in any of the language aspects. It is better placed in an action or background task. Do not leave debug statements in production code (exception debug log statements). When asynchronous code freezes (e.g. on console:), try to call it with ApplicationManager.getApplication().invokeLater(runnable) . Implement INamedConcept in concepts that have a name. The name property can be automatically used as the name for root nodes, references etc. Avoid deeply nested call chains e.g. nodea.nodeb.nodec.property. Consider providing a method do access a property or method for the deeper levels. Treat Warnings As Errors \u21a9 Choosing the right Collection \u21a9","title":"Miscellaneous"},{"location":"gotchas/aspects/actions/","text":"Are node factories used when calling new node . No. More information can be found in the official documentation .","title":"Actions"},{"location":"gotchas/aspects/behavior/","text":"I want to use generic return types. 1 Not possible. Have a look at this ticket . Can I use asynchronous code in behaviour methods such as calls to external tools? Be careful when doing so. Make sure to not mix concurrent locking aspects such as write and read actions into behaviour methods. It should always be assumed that you have the correct lock in this methods. Move the code concerning the concurrent access for example into a background task. More information can be found in the official documentation . Can I access the parent in the constructor? No, it doesn't work because the node is not attached yet ( documentation ). Use for example a node factory to access the parent instead. Can I use a more specific return type while overriding behavior? No, it is not possible. Have a look at this ticket . Can I use variable arguments (varArgs) in behaviour methods? No, it is not possible. Have a look at this ticket . Can I enter a throws clause in behaviour methods? No, it is not possible. Have a look at this ticket . Where can I save temporary information about nodes? Consider saving temporay data about nodes in annotations and user objects ( node/.putUserObject , node/.getUserObject ) instead of introducing properties. For the generator consult the section \"Transferring User Data\" of the generator documentation . MPS forum - Generics for return type of behavior method \u21a9","title":"Behaviour"},{"location":"gotchas/aspects/constraints/","text":"How can I set default values for properties? Use the language com.mbeddr.mpsutil.propertydefault from the mbeddr platform .","title":"Constraints"},{"location":"gotchas/aspects/dataFlow/","text":"Where can I find good examples to understand how dataflow works? Have a look at the data flow builders of jetbrains.mps.baselanguage . You can also search for usages of DataFlowerBuilderDeclaration in general.","title":"Dataflow"},{"location":"gotchas/aspects/documentation/","text":"What is this aspect used for? This aspect is part of com.mbeddr.doc. It allows to define Documentation nodes that can be exported to xhtml, latex and markdown at the moment. New targets can be implemented easily. When you invoke the intention \"Add Reference to Documented Concept\" when defining a new section as part of a chapter, the documention for this concept will be shown in the Documentation tool at the bottom part of the screen. How do I export the documentation? Click make or rebuild model that contains the documentation, a new folder /doc_gen is generated. Should I write documentation? Do I need to use this aspect. Yes, code is not always self documenting. You have the following possibilities for writing documention: JavaDoc 1 the intention Document com.mbeddr.documentation com.mbeddr.doc the short description property of concepts DocumentedNodeAnnotation Use javadoc liberally \u21a9","title":"Documentation*"},{"location":"gotchas/aspects/editor/","text":"I need feature X for the editor. Have a look at the full extension list of mps-extensions . I need hyperlinks. Use com.mbeddr.mpsutil.hyperlink from mbeddr platform . Is it possible to access the selected value of one swing component from inside another swing component? Yes it is. More info in this answer . Highlighting of constraint errors in inspector doesn't work. Known bug ( ticket ). Pressing F5 helps. I need to delete non-existing children, references or properties from a node. Switch to the reflective editor and remove the offending parts. There is also an enhancement script that can remove properties. I want to include non child relations in Editor. Use com.mbeddr.mpsutil.editor.querylist from mbeddr platform . I want to open the inspector programmatically. Call editorContext.openInspector() . I want to open the editor for a node programmatically. Call NavigationSupport.getInstance().openNode() . I want to set editor hints programmatically. Call editorContext.getEditorComponent().getUpdater().addExplicitEditorHintsForNode() . Is there a disadvantage by using the indent layout instead of the indent cell mode? No. There used to be performance issues with bigger models that were fixed in MPS 2021.1 . How to find out where a substitute menu entry is coming from? Use the Menu Trace Tool Window. More information can be found in the official documentation . I want to override an arbitrary editor. Use the language de.slisson.mps.conditionalEditor from mps-extensions. I want to get the font of an editor. Use jetbrains.mps.nodeEditor.EditorSettings#getDefaultEditorFont() I want to subscribe to editor changes. Check out this answer . I need to get the text of an EditorCell programmatically. Call EditorCell.renderText().getText() . How can find out if an editor cell is readonly? Execute ReadOnlyUtil.isCellsReadOnlyInEditor(this.editorComponent, new singleton<EditorCell>(editorCell)) . How do I get an editor for a node as a swing component? HeadlessEditorComponent component = new HeadlessEditorComponent(#project.getRepository()); component.editNode(node); return component; How to I get the selection/ selected node in the editor. Call editorComponent.getSelectionManager().getSelection() / editorContext.getSelectedNode() . MPS forum - hierarchical tree structure and editing \u21a9","title":"Editor"},{"location":"gotchas/aspects/feedback/","text":"Can I override error messages? Yes, in this aspect. Consult the official documentation .","title":"Feedback"},{"location":"gotchas/aspects/findUsages/","text":"I click Find usages in the context menu of a node and it doesn't find any usages. The standard search scope is the project. Try to expand it to global in the find usages settings. Also check that you are using the correcting finders in the Finders section of the settings. I want to execute find usage multiple times but the results tab gets overridden and I can't compare results. Check the option \"Open in new tab\" in the section View options of the preferences or pin the result tabs by right clicking and selecting \"Pin Tab\".","title":"Find Usages"},{"location":"gotchas/aspects/generator/","text":"What can be generated? Have a look at the language repostory . You might also find other languages on Github. In general there doesn't have to be an existing language. Any text can be generated with TextGen or Plaintextgen from mps-extensions. It's also possible to generate code from an action or pre/post-processing script in the generator by using an existing Java library such as Apache Poi. A tutorial for example for excel can be found here . I want to create multi outputs for my language. 1 Use a dummy concept or generation plan with fork. Also answered in documentation . Can I invoke the generator from an external tool? 2 Yes, it can be run from Ant. The import x cannot be resolved. 3 The solution that contains the class has to be added as a runtime solution (see here ) I want to copy the output to another location Use the @CopyOutcome annotation. I want to generate latex files. The mbeddr documentation language can do this. Have a look at the documentation . I don't want to generate code. You can interpret your models instead. Use mbeddr.mpsutil.interpreter from the mbeddr plattform. I want to generate text. Use the textgen aspect or use mps-plaintextgen from mps-extensions . I need a temporary model. Use the class TemporaryModels . I want to call preview generated text programmatically. Use the MPS action TextPreviewModel or call the methods in TextGeneratorEngine if you want to use textgen. Why are my root nodes generated multiple times? Have you used one of your root nodes as a child of another node? It will still act as a root node in this case. Should I use generation plans or generator priorities? Have a look at the motivation for generation plans in the official documentation . Generation plans should be used when the generation order is simple. I need to get the output path for a solution. Call myModule.getModuleDescriptor() as SolutionDescriptor.getOutputPath() no output location for X Make sure that the Java facet is enabled in the properties of the language or solution. This error can often be seen when opening an old MPS project. Which variable names can't be used because of hidden variables in the generator? Underlined variables are special variables that are available. Console: ConsoleContext context , ConsoleStream console Constraint: Scope: ReferenceConstraintsContext _context Typesystem: all rules: IsApplicable2Status status , TypeCheckingContext typeCheckingContext comparison rule: SNode node1 , SNode node2 , inequation replacement rule custom condition: SNode subtype , SNode supertype , rule: SNode subtype , SNode supertype , EquationInfo equationInfo , TypeCheckingContext typeCheckingContext , boolean inequalityIsWeak , boolean inequalityIsLessThan substitute type rule: SNode originalType Generator: mapping configuration: CreateRootRuleContext _context Editor: General: SNode myNode MPS forum - i want export multi language from mps \u21a9 MPS forum - Is it possible to export a DSL compiler created with MPS and use it independently \u21a9 MPS forum - Generator error: uncaught exception ?no classifier? \u21a9","title":"Generator"},{"location":"gotchas/aspects/intentions/","text":"How to can I go to the declaration of an intention when I open the intention menu? Select the intention and click the arrow/press right arrow key -> Go to intention declaration. How do I execute an action as an intention? Add the action to the action group ActionsAsIntentions . I want to group my intentions and give them names. Use the language com.mbeddr.mpsutil.intentions from mps-extensions . I need to get all available intentions for a node. Call IntentionsManager.getInstance().getAvailableIntentions() .","title":"Intentions"},{"location":"gotchas/aspects/listener/","text":"How do I react to changes in the model? Use com.mbeddr.mpsutil.modellisteners from the mbeddr platform .","title":"Listener*"},{"location":"gotchas/aspects/migrations/","text":"What are the best practises? 1 Have a look at this answer . I want to migrate an MPS project that is many years old. How do I do that? For old projects you have to edit the module files manually because the structure slightly changed. Open the .mpl files in an text editor and change all occurences of <language id=\"%ID\" fqName=\"%FQNAME\" version=\"%VERSION\" /> into <language slang=\"l:%ID:%FQNAME\" version=\"%VERSION\" /> . The next step is to start the migration assistant. It will fail because it can't find migrations for some language versions. For example: jetbrains.mps.lang.editor only has a migration starting with version 7.You have to find all occurences of this language in your project with an terxt editor and change the attribute version to 7. Then run the migration assistant again and hope that everything works. Some concepts cannot be migrated automatically such as the substitute and transformation menues. There will also be other issues that have to be fixed manually. MPS forum - Migration scripts best practice \u21a9","title":"Migrations"},{"location":"gotchas/aspects/plugin/","text":"Should I use this aspect? No. You should use plugin solutions instead. References to keys in action context parameters are out of search scope. You need to add a dependency to MPSCommonDataKeys . This class extends PlatformDataKeys and this class extends CommonDataKeys . My action is not visible. You have to add it to an ActionGroup that can be attached at differenct places such as the context menu or the build menu. All of the action context parameters that are marked as required have to be available and the isApplicable block must return true for an action to be visible. For debugging purposes you can set \"always visible\" to true to check if your action is registered at all. You also need to have a standalone descriptor in your model for it to work. Additionaly, the solution kind should be set to Other in the Java tab of the solution properties ( official documentation ). I want to merge models. Use the language de.itemis.mps.modelmerger (experimental) from mps-extensions . I want to check the structure of a node. Use the language de.slisson.mps.structurecheck from mps-extensions . I want to store different states/versions of a node inside the model. Use the language de.itemis.mps.nodeversioning from mps-extensions . I want to create new SContainmentLink for non-existent role 1 . It can be created through MetaAdapterFactory . How to I check if a model is a generator model, a test model etc.? Call the corresponding method in SModelStereotype . How do I add imports to a model? Use the class ModelImportHelper and call addImport . How to create new SContainmentLink for non-existent role? \u21a9","title":"Plugin"},{"location":"gotchas/aspects/polyfun/","text":"What is this aspect used for? It allows to declare polymorphic functions and is part of Shadowmodels in mps-extensions . Have a look at the sandbox in mps-extensions .","title":"Polyfun*"},{"location":"gotchas/aspects/refactorings/","text":"Is this aspect widely used? No, even in MPS languages there are just a few use cases.","title":"Refactorings"},{"location":"gotchas/aspects/scripts/","text":"Are enhancement scripts executed as part of the migration? No, they are not.","title":"Scripts"},{"location":"gotchas/aspects/structure/","text":"How do I use a list of string properties? Wrap your property into a new concept and use a child collection (myString: MyString[0..n]) Can properties be overridden? No. More info can be found in this ticket . I implemented ISuppressErrors but errors are still shown for my node. You have to implement IDontApplyTypesystemRules and ISkipConstraintsChecking . More information can be found in the official documentation .","title":"Structure"},{"location":"gotchas/aspects/tests/","text":"Can I add an annotation to skip tests the way it normally works with junit? No, it is not supported. You have to comment out the test case. The only statement that supports this behaviour is the assert statement of KernelF ( AssertTestItem ) Tests have a long warm up time and run slowly. When running the tests from a run configuration, enable \"Execute in the same process\" in the configuration settings. Also check the box \"Allow parallel run\" ( official documentation ). Tests are not running at all. A test info node has to be added to the model of the tests, so that the tests can find the path of the project. The project path also has to be set in this node. Make sure that variables that are used in this path are set in Preferences->Appearance&Behavior->Path Variables. ( official documentation )","title":"Tests"},{"location":"gotchas/aspects/textGen/","text":"How do I get the textgen for a node? Use the class TextGeneratorEngine . It only works for root nodes such as ClassConcept and returns null when there is no text output. Can I also generate text from the generator aspect? Yes. Use the language com.dslfoundry.plaintextgen from mps-extensions .","title":"TextGen"},{"location":"gotchas/aspects/transformations/","text":"What is this aspect used for? It is part of Shadowmodels in mps-extensions . Consult the documentation for more information.","title":"Transformations*"},{"location":"gotchas/aspects/typesystem/","text":"Typesystem rules are not executing. Turn off the power save mode . Also make sure that the languages that contains the rules is used. Make sure that under Tool-> Model Checker the typesystem checks are enabled. Some rules are only checked when \"Check model\" is invoked. In this case the option \"do not apply on the fly\" is set to true in a checking rule. Are comparison rules often used? No, they are rarely used (not many results across various code bases).","title":"Typesystem"},{"location":"gotchas/aspects/vcs/","text":"What is this aspect used for? Refer to the official documentation . I pulled some changed or did some other VCS related stuff and strange errors appear or changes are not visible. There might be a bug related to caching or VHS in general. Invalidating the cache or restarting the project might help. There are quite some bugs in VCS .","title":"VCS"},{"location":"gotchas/aspects/virtualinterfaces/","text":"What is this aspect used for? It allows to declare virtual interfaces and is part of Shadowmodels in mps-extensions. Have a look at the sandbox in mps-extensions .","title":"Virtual Interfaces*"},{"location":"gotchas/build/","text":"Dependencies on a module not visible from current build project. Check this answer . Cannot find extended language in dependencies. Check this answer . I want to have a gradle build for my MPS project. There is a gist for a minimal build . There is a mps-gradle-plugin . For more complex projects look at build scripts of big projects such as MPS-extensions . The gradle build fails with exception: Incremental build fails during generation on no changed models Known bug . Run git clean -xdf and rebuild everything. How can I find out the supported MPS version of a project? Search the readme for this information. If the project uses a gradle script, you can most likely find this information in the file build.gradle (for example in this line in mps-extension). For older MPS projects there is no waying of finding out the version. What do I need to put into the .gitignored file? Have a look at this .gitignore file. Tests fail with a message, that a filename or extension is too long (Windows). There is a path that is too long for Windows in the build script. Choose the option 'compressArgs' in 'test modules' node to fix the issue. More info can be found in the ticket . Command line generation fails on Windows if using non-ASCII characters This is a known bug ( ticket ). It happens because the generation is started with a Window encoding. Set the following environment variable before starting the build: set JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"","title":"Build"},{"location":"gotchas/console/","text":"I can't enter the print statement. It can't be used in nested structures. Use it at the top level instead. How can I enter more the one statement into the console? Enter an opening curly brace (starts a new statement list in baselanguage) and enter your statements. How can I find all System.out.println statements? #nodes,#models, #usages etc. don't show any result. What did I do wrong Make sure that your query is correct. You also have to set I scope for these statements in square brackets such as #nodes<scope = global> to find all the nodes in the global scope. Is the console a regular root node? Yes, it is of concept ConsoleRoot and is located in a temporary model. It is possible to open it in a normal tab. Right click in the console (for example at the top) and click \"Show Node in Explorer\". Click the ConsoleRoot and it will open in a new tab (Keyboard shortcuts such as run line won't work here). After executing the current line I get an error that the console class was not found? This can happen when the compilation of the model of the console was not successful. It can happen if you import a custom generation plan into the console that disables some generators. It can also happen if you import a solution that doesn't has the Java Facet checked or has a different solution kind such as \"Other\". What does the expression #internalMode do? It tells you if the internal mode is activated which can be achieved by calling RuntimeFlags.setInternalMode(true) or by setting a system variable. The exact functionality of this flag can be found by looking at the MPS source code . One of the new action groups that it adds, is called Internal. There is also an Internal Actions Menu in Intellij IDE's. Consolute the documentation for more info.","title":"Console"},{"location":"gotchas/external_files_and_tools/","text":"Files \u00b6 I want to load an external file into MPS / I want to migrate existing data into MPS. 1 Write a solution that imports the files and converts them to your model or use custom persistence. Tools \u00b6 I want to run an LSP server for MPS grammars. Not possible at the moment. I want to use databases in MPS. MPS doesn't have any special support for databases or Spring Boot (unlike IntelliJ IDEA) . I want to create a standalone utility (not a complete IDE) for language generation with MPS. 2 Not possible at the moment. I want to share MPS snippets. You can use Skadi Cloud . MPS forum - How to migrate existing data into MPS? \u21a9 MPS forum - Standalone language generator \u21a9","title":"External Files and Tools"},{"location":"gotchas/external_files_and_tools/#files","text":"I want to load an external file into MPS / I want to migrate existing data into MPS. 1 Write a solution that imports the files and converts them to your model or use custom persistence.","title":"Files"},{"location":"gotchas/external_files_and_tools/#tools","text":"I want to run an LSP server for MPS grammars. Not possible at the moment. I want to use databases in MPS. MPS doesn't have any special support for databases or Spring Boot (unlike IntelliJ IDEA) . I want to create a standalone utility (not a complete IDE) for language generation with MPS. 2 Not possible at the moment. I want to share MPS snippets. You can use Skadi Cloud . MPS forum - How to migrate existing data into MPS? \u21a9 MPS forum - Standalone language generator \u21a9","title":"Tools"},{"location":"gotchas/general/","text":"I have a problem that is not in this list. Try invalidating the cache and restarting MPS (same menu). Search the forum and issue tracker . Ask a question on Slack . I changed something in a settings page and nothing changed. There might be a bug related to caching. Reopening the dialog or invalidating the cache or restarting the project might help. Are there any recommended MPS settings that should be changed? The maximum heap size setting should be changed to a higher values such as 8 GB when using many languages or plugins. I am running low on memory or MPS is running slowly. What can I do without restarting MPS? When you have enabled the loaded models indicator in the lower right corner of the screen, you can click on the text to unload not needed models . The memory indicator at the same location can be used to free memory. As a last resort the power saving mode can be enabled which disables background tasks such as the model checker. What is a SRepository and how is it structured? The answer can be found in the MPS source code 1 .There can be multiple repositories available. Given a repository, references to modules/models/nodes can be resolved. There's no need in making ids unique globally as each subsystem knows, which exact repository it needs to use at any moment. (e.g. the type-system knows where it stores its type-nodes, so it will not try to resolve references to them ) A repository contains modules, modules have model roots, each model root can load models. Also a module can be a models container itself (without model root). A model is then a set of \"root\" nodes. Each \"root\" node is a root of a tree of nodes. So that overall, repository is a tree structure. Are there othere languages besides Base Language? Have a look at the MPS Languages Repository . Is there an existing expression/scripting language? There is the expressions sample project. For a full language that can also be evaluated, have a look at KernelF available at iets3.opensource . How do I organize large projects in MPS? Read the two answers in this thread . How to I debug MPS projects? Have a look at this blog post . Where are my log messages? log info logs to the MPS log file idea.log , message info logs to the messages view . Which log level should I use? Have a look at this Stack Overflow answer . SRepository.java \u21a9","title":"General"},{"location":"gotchas/languages/","text":"What is the relationship between mbeddr.platform, iets3.opensource and mps-extensions? Older versions of mbeddr.platform and iets3-opensource contain a dependency to mps-extensions and they repack it. The newest version of mbeddr.platform doesn't repack it. mps-extension contains many extensions that were part of mbeddr.platform. Not all extensions were migrated because they are not mature enough.","title":"Info"},{"location":"gotchas/languages/baselanguage/","text":"Base Language \u00b6 Language: jetbrains.mps.baselanguage For a full list of baselanguage bugs and feature request, have a look at this ticket search . Paste as Java class doesn't work. Not all newer Java features can be pasted such as the double colon operator(::) and static imports. Loops with more than one variable also don't work. Set 'Export' flag at the moduleX import You are using a class that extends another class that is situated in another solution. That means that the export flag for the other solutions should be set in the current module, so that there is automatically a dependency to this module. A better explanation can be found here . What Java language features are not supported in Base Language? The following features are not supported (yet): local classes multiline strings/text blocks records sealed classes pattern matching for switch statements pattern matching for instanceof double brace initialization I have written a function with base language code but doesn't return anything when called Base Language allows implicit returns that means that the last statement is automatically returned. There are some places where implicit returns are not support such as when return a new ListScope class. Make sure to add a return statement in such places. Var Variable \u00b6 Language: jetbrains.mps.baselanguage.varVariable TextGen not found for concept of X language. Bug (can't find ticket). Wrong generator order of languages. The generators of language x are executed first and then the generator of the var variable. It should be the other way around. You can specify a custom generation plan to fix this issue. Closures \u00b6 Language: jetbrains.mps.baselanguage.closures Exception when passing closure literal as a parameter in a behaviour method call Closures can't be used for functional interface types such as java.util.Runnable in behaviour methods (see this ticket ) Collections \u00b6 How do I create a sequence with one element? Use the singleton constructor: new singleton < string > ( \"single\" ) How do convert from a Java ArrayList to a Base Language list? Use the copy constructor: new arraylist < string > ( copy : yourArrayList ) How do I convert base language collections to a Java Stream? First convert your collection to a list that you downcast to a Java List. Then you can convert it into a stream StreamSupport . stream ( list / . spliterator (), false )","title":"Base Language and Extensions"},{"location":"gotchas/languages/baselanguage/#base-language","text":"Language: jetbrains.mps.baselanguage For a full list of baselanguage bugs and feature request, have a look at this ticket search . Paste as Java class doesn't work. Not all newer Java features can be pasted such as the double colon operator(::) and static imports. Loops with more than one variable also don't work. Set 'Export' flag at the moduleX import You are using a class that extends another class that is situated in another solution. That means that the export flag for the other solutions should be set in the current module, so that there is automatically a dependency to this module. A better explanation can be found here . What Java language features are not supported in Base Language? The following features are not supported (yet): local classes multiline strings/text blocks records sealed classes pattern matching for switch statements pattern matching for instanceof double brace initialization I have written a function with base language code but doesn't return anything when called Base Language allows implicit returns that means that the last statement is automatically returned. There are some places where implicit returns are not support such as when return a new ListScope class. Make sure to add a return statement in such places.","title":"Base Language"},{"location":"gotchas/languages/baselanguage/#var-variable","text":"Language: jetbrains.mps.baselanguage.varVariable TextGen not found for concept of X language. Bug (can't find ticket). Wrong generator order of languages. The generators of language x are executed first and then the generator of the var variable. It should be the other way around. You can specify a custom generation plan to fix this issue.","title":"Var Variable"},{"location":"gotchas/languages/baselanguage/#closures","text":"Language: jetbrains.mps.baselanguage.closures Exception when passing closure literal as a parameter in a behaviour method call Closures can't be used for functional interface types such as java.util.Runnable in behaviour methods (see this ticket )","title":"Closures"},{"location":"gotchas/languages/baselanguage/#collections","text":"How do I create a sequence with one element? Use the singleton constructor: new singleton < string > ( \"single\" ) How do convert from a Java ArrayList to a Base Language list? Use the copy constructor: new arraylist < string > ( copy : yourArrayList ) How do I convert base language collections to a Java Stream? First convert your collection to a list that you downcast to a Java List. Then you can convert it into a stream StreamSupport . stream ( list / . spliterator (), false )","title":"Collections"},{"location":"gotchas/languages/double_dispatch/","text":"This article explains the language jetbrains.mps.baselanguage.doubleDispatch . The example is taken from this article : Most OOP programming languages support single dispatch, more commonly known as virtual methods. For example, consider the following code: Single dispatch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 public class SpaceShip { public string GetShipType () { return \"SpaceShip\" ; } } public class ApolloSpacecraft extends SpaceShip { public string GetShipType () { return \"ApolloSpacecraft\" ; } } SpaceShip ship = new ApolloSpacecraft (); System . out . println ( ship . GetShipType ()); // output: (1) ApolloSpacecraft The actual method implementation to be called is chosen at runtime based solely on the actual type of ship. So, only the type of a single object is used to select the method, hence the name single dispatch. Note: Single dispatch is one form of dynamic dispatch , i.e. the method is chosen at runtime. If the method is chosen at compile time (true for all non-virtual methods), it\u2019s called static dispatch . Let\u2019s add some asteroids: Double dispatch 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 public class Asteroid { public void collideWith ( SpaceShip s ) { System . out . println ( \"Asteroid hit a SpaceShip\" ); } public void collideWith ( ApolloSpacecraft a ) { System . out . println ( \"Asteroid hit an ApolloSpacecraft\" ); } } public class ExplodingAsteroid extends Asteroid { public void collideWith ( SpaceShip s ) { System . out . println ( \"ExplodingAsteroid hit a SpaceShip\" ); } public void collideWith ( ApolloSpacecraft a ) { System . out . println ( \"ExplodingAsteroid hit an ApolloSpacecraft\" ); } } public class DoubleDispatch { public static void main ( string [] args ) { Asteroid theAsteroid = new Asteroid (); SpaceShip theSpaceShip = new SpaceShip (); ApolloSpacecraft theApolloSpacecraft = new ApolloSpacecraft (); theAsteroid . collideWith ( theSpaceShip ); // output: (1) theAsteroid . collideWith ( theApolloSpacecraft ); // output: (2) System . out . println (); ExplodingAsteroid theExplodingAsteroid = new ExplodingAsteroid (); theExplodingAsteroid . collideWith ( theSpaceShip ); // output: (3) theExplodingAsteroid . collideWith ( theApolloSpacecraft ); // output: (4) System . out . println (); Asteroid theAsteroidReference = theExplodingAsteroid ; theAsteroidReference . collideWith ( theSpaceShip ); // output: (5) theAsteroidReference . collideWith ( theApolloSpacecraft ); // output: (6) System . out . println (); // Note the different datatypes SpaceShip theSpaceShipReference = theApolloSpacecraft ; theAsteroid . collideWith ( theSpaceShipReference ); // output: (7) theAsteroidReference . collideWith ( theSpaceShipReference ); // output: (8) } } Asteroid hit a SpaceShip Asteroid hit an ApolloSpacecraft Exploding Asteroid hit a SpaceShip Exploding Asteroid hit anApolloSpacecraft Exploding Asteroid hit a SpaceShip Exploding Asteroid hit an ApolloSpacecraft Asteroid hit an ApolloSpacecraft ExplodingAsteroid hit a SpaceShip The desired result here would be ExplodingAsteroid hit an ApolloSpacecraft but instead we get ExplodingAsteroid hit a SpaceShip . To support double dispatch, import the dispatch-language and include dispatch-modifiers in ExplodingAsteroid: 1 2 3 4 5 6 7 8 9 public class ExplodingAsteroid extends Asteroid { public dispatch void collideWith ( SpaceShip s ) { System . out . println ( \"ExplodingAsteroid hit a SpaceShip\" ); } public dispatch void collideWith ( ApolloSpacecraft a ) { System . out . println ( \"ExplodingAsteroid hit an ApolloSpacecrat\" ); } } The last method now correctly returns ExplodingAsteroid hit an ApolloSpacecraft .","title":"Double dispatch"},{"location":"gotchas/languages/mbeddr_mpsutil/","text":"What languages are old/deprecated and should not be used anymore? com.mbeddr.mpsutil.breadcrumb (removed in a recent version of mbeddr) com.mbeddr.mpsutil.buildutil (experimental) com.mbeddr.mpsutil.contextactions (use MPS context actions instead) com.mbeddr.mpsutil.multilingual (unused/unmaintained) com.mbeddr.mpsutil.typesystem.trace (use MPS Type system trace instead) com.mbeddr.mpsutil.test.util (not needed) com.mbeddr.mpsutil.bldoc (obsolete since MPS java doc refactoring) com.mbeddr.mpsutil.langstats (not needed) com.mbeddr.mpsutil.javainterpreter (can only interpret expression, was build as a demo for the interpret framework) com.mbeddr.mpsutil.spreferences (rarely used) com.mbeddr.mpsutil.uniquenames (performance issues) com.mbeddr.mpsutil.iconchar (replaced with MPS concept) com.mbeddr.mpsutil.propertydefault (not used) com.mbeddr.mpsutil.testScope (not used) com.mbeddr.mpsutil.varscope (replaced with MPS scopes) Why are there two Context Action tools? The context actions tool from com.mbeddr.mpsutil.contextactions was developed first. Later MPS developed their own tool that works the same as the one from mpsutil. Nowadays both tool windows coexist. Why are some of these language not migrated to mps-extensions? Some language have dependencies that would also need to be migrated to mps-extensions . Other languages are deemed as not stable or important enough to be migrated. I am using some mbeddr languages in my project but some of them are not deployed. There might be some additional plugins that need to be installed: de.itemis.mps.nativelibs.loader com.mbeddr.mpsutil.actionsfilter mbeddr.spawner They can be installed by calling gradlew.bat install \"-PMPS_Installation=<path to MPS>\" from the root folder of the mbeddr.core repository when building from source. The actionsfilter plugin is necessary for the actionsfilter language.","title":"Mbeddr"},{"location":"gotchas/languages/mps_extensions/","text":"Editor \u00b6 Richtext \u00b6 Language: slisson.richtext The ordering of text and IWords can't be arbitrary A checking rule enforces that the text is normalized: There has to be at least one child, it must start with a Word and a Word must always be betweeen two embedded nodes and there are noo two consecutive Words. Diagram \u00b6 Language: de.itemis.mps.editor.diagram I encountered a bug. Check the meta Issue on Github. How do I use this language? Have a look at the samples of this language in mps-extensions . There is also an external tutorial series . What is edge ID in the diagrams used for? It\u2019s used in the map that contains the layout data. It can be any unique string. LayoutMapEntry.key is the property where this string is used ( source ). Conditional Editor \u00b6 Language: de.slisson.mps.conditionalEditor There are generation errors. The condition of the conditional editor is not optional, it has to be set. Tables \u00b6 Language: de.slisson.mps.tables How to get rid of the small little extra grid lines on the outside of the table rows? ( original question ) Change these properties to true . Cell Layout \u00b6 Language: de.itemis.mps.editor.celllayout What does this language do? In the MPS layout algorithms the children decide about their width and height and the parent cell can only arrange the already layouted children. In the algorithms from the celllayout language are similar to the swing layouters where the child is asked for its min/max/preferred size, but the parent decides about the size of the child and the child then has to fit itself into these bounds. This is used in tables and diagram, but also for the styles defined in the de.itemis.mps.celllayout language ( source ). Grammar Cells \u00b6 Language: de.itemis.mps.grammarcells Grammar cells force me to create a dummy component. Is this really necessary? Yes it is, otherwise the generator doesn't get used source . What combination of cells are not supported? The following combinations are not allowed: optional and constant optional and reference","title":"MPS Extensions"},{"location":"gotchas/languages/mps_extensions/#editor","text":"","title":"Editor"},{"location":"gotchas/languages/mps_extensions/#richtext","text":"Language: slisson.richtext The ordering of text and IWords can't be arbitrary A checking rule enforces that the text is normalized: There has to be at least one child, it must start with a Word and a Word must always be betweeen two embedded nodes and there are noo two consecutive Words.","title":"Richtext"},{"location":"gotchas/languages/mps_extensions/#diagram","text":"Language: de.itemis.mps.editor.diagram I encountered a bug. Check the meta Issue on Github. How do I use this language? Have a look at the samples of this language in mps-extensions . There is also an external tutorial series . What is edge ID in the diagrams used for? It\u2019s used in the map that contains the layout data. It can be any unique string. LayoutMapEntry.key is the property where this string is used ( source ).","title":"Diagram"},{"location":"gotchas/languages/mps_extensions/#conditional-editor","text":"Language: de.slisson.mps.conditionalEditor There are generation errors. The condition of the conditional editor is not optional, it has to be set.","title":"Conditional Editor"},{"location":"gotchas/languages/mps_extensions/#tables","text":"Language: de.slisson.mps.tables How to get rid of the small little extra grid lines on the outside of the table rows? ( original question ) Change these properties to true .","title":"Tables"},{"location":"gotchas/languages/mps_extensions/#cell-layout","text":"Language: de.itemis.mps.editor.celllayout What does this language do? In the MPS layout algorithms the children decide about their width and height and the parent cell can only arrange the already layouted children. In the algorithms from the celllayout language are similar to the swing layouters where the child is asked for its min/max/preferred size, but the parent decides about the size of the child and the child then has to fit itself into these bounds. This is used in tables and diagram, but also for the styles defined in the de.itemis.mps.celllayout language ( source ).","title":"Cell Layout"},{"location":"gotchas/languages/mps_extensions/#grammar-cells","text":"Language: de.itemis.mps.grammarcells Grammar cells force me to create a dummy component. Is this really necessary? Yes it is, otherwise the generator doesn't get used source . What combination of cells are not supported? The following combinations are not allowed: optional and constant optional and reference","title":"Grammar Cells"},{"location":"gotchas/misc/","text":"MPS in the web \u00b6 I want to know about existing projects regarding MPS in the web. Have a look at Deployment options for MPS , this list and WebMPS by JetBrains. Internationalization and localization \u00b6 I want to translate all of MPS. 1 Install a language pack for Intellij. Hardcoded parts of MPS can't be translated. There are also known bugs with extented characters ticket and unicode in general in case you want to use special characters. Any way to translate the whole MPS? \u21a9","title":"Miscellaneous"},{"location":"gotchas/misc/#mps-in-the-web","text":"I want to know about existing projects regarding MPS in the web. Have a look at Deployment options for MPS , this list and WebMPS by JetBrains.","title":"MPS in the web"},{"location":"gotchas/misc/#internationalization-and-localization","text":"I want to translate all of MPS. 1 Install a language pack for Intellij. Hardcoded parts of MPS can't be translated. There are also known bugs with extented characters ticket and unicode in general in case you want to use special characters. Any way to translate the whole MPS? \u21a9","title":"Internationalization and localization"},{"location":"gotchas/mps_internal/","text":"CoreComponent \u00b6 How to I get MPS core components from code? From the console: MPSProject p = (( MPSProject ) # project ); Platform host = ( Platform ) p . getPlatform (); # print host . findComponent ( MakeServiceComponent . class ); How to I convert between different Project classes? Use the class ProjectHelper . What interesting MPS utility classes can I use in my code? DirUtil - directory related utilities MatchingUtil - check if two nodes match SubtypingUtil - subtyping related utilities CopyUtil - utility for copying models, nodes etc. FileUtil - file related utilities JavaNameUtil utilities related to java naming NameUtil - name related utilities such as pluralizing or escaping strings CopyPasteUtil / TextPasteUtil - copy paste related utilities ActionUtils - action related utilities; can be used to execute an action programmatically NewModuleUtil - utilities related to created new modules such as creating solutions or languages TemporaryModels - utilities for creating temporary models UIUtil - utilities related to the Intellij UI such as checking for dark mode (isUnderDarcula()). PathManager / PathManager - classes for getting all kind of paths such as the plugins folder or the log folder. I want to change something inside a SModule such as adding a dependency but can't find the right method. Try casting it to AbstractModule first. How does class loading work in MPS? See this comment , Dependencies and Classpath in MPS and classloading issues . Is there a way to start two instances of MPS, each with its own cache/state? You can create a copy of you MPS installation and edit the idea.properties file in the bin directory. Changing idea.system.path should allows you start a second instance with dedicated caches/state. If you don\u2019t want to share any configuration also update idea.config.path. How do I get an icon for a concept? Call GlobalIconManager.getInstance().getIconFor(concept) . Where can I find builtin icons? IntelliJ IDEA icons are declared in the class AllIcons . MPS icons are declared in the class MPSIcons . I have settings that I want to save globally 1 . Preferences can be only used at the project level. Use the workaround described in this answer or save your values in the global IntelliJ IDEA Registry . More information about the Registry can be found in this Stack Overflow post . It can also be shown programmatically by calling new RegistryUi().show() . How can I call make or rebuild? Use need to use MakeActionImpl . Example usuages can be found in the same model. How do I work with temporary models? try { undo-transparent command with this.mpsProject.getRepository() { tmpModel = TemporaryModels.getInstance().createReadOnly(TempModuleOptions.forDefaultModule()); tmpModel.addRootNode(type); TemporaryModels.getInstance().addMissingImports(tmpModel); } // do something with the node } finally { undo-transparent command with this.mpsProject.getRepository() { tmpModel.removeRootNode(type); TemporaryModels.getInstance().dispose(tmpModel); } } How to I add widgets to the status bar? (memory indicator, save transient models...) Have a look at this answer . Make sure to call this code from a project plugin . How to I display a message in the status bar? (left bottom corner) Note: The message might not be visible by calling from the console, because the rebuild of the model already shows a message: WindowManager.getInstance().getStatusBar(ProjectHelper.toIdeaProject(#project)) https://mps-support.jetbrains.com/hc/en-us/community/posts/115000568670-Create-and-access-a-single-Preference-Component-which-is-common-for-all-projects \u21a9","title":"General"},{"location":"gotchas/mps_internal/#corecomponent","text":"How to I get MPS core components from code? From the console: MPSProject p = (( MPSProject ) # project ); Platform host = ( Platform ) p . getPlatform (); # print host . findComponent ( MakeServiceComponent . class ); How to I convert between different Project classes? Use the class ProjectHelper . What interesting MPS utility classes can I use in my code? DirUtil - directory related utilities MatchingUtil - check if two nodes match SubtypingUtil - subtyping related utilities CopyUtil - utility for copying models, nodes etc. FileUtil - file related utilities JavaNameUtil utilities related to java naming NameUtil - name related utilities such as pluralizing or escaping strings CopyPasteUtil / TextPasteUtil - copy paste related utilities ActionUtils - action related utilities; can be used to execute an action programmatically NewModuleUtil - utilities related to created new modules such as creating solutions or languages TemporaryModels - utilities for creating temporary models UIUtil - utilities related to the Intellij UI such as checking for dark mode (isUnderDarcula()). PathManager / PathManager - classes for getting all kind of paths such as the plugins folder or the log folder. I want to change something inside a SModule such as adding a dependency but can't find the right method. Try casting it to AbstractModule first. How does class loading work in MPS? See this comment , Dependencies and Classpath in MPS and classloading issues . Is there a way to start two instances of MPS, each with its own cache/state? You can create a copy of you MPS installation and edit the idea.properties file in the bin directory. Changing idea.system.path should allows you start a second instance with dedicated caches/state. If you don\u2019t want to share any configuration also update idea.config.path. How do I get an icon for a concept? Call GlobalIconManager.getInstance().getIconFor(concept) . Where can I find builtin icons? IntelliJ IDEA icons are declared in the class AllIcons . MPS icons are declared in the class MPSIcons . I have settings that I want to save globally 1 . Preferences can be only used at the project level. Use the workaround described in this answer or save your values in the global IntelliJ IDEA Registry . More information about the Registry can be found in this Stack Overflow post . It can also be shown programmatically by calling new RegistryUi().show() . How can I call make or rebuild? Use need to use MakeActionImpl . Example usuages can be found in the same model. How do I work with temporary models? try { undo-transparent command with this.mpsProject.getRepository() { tmpModel = TemporaryModels.getInstance().createReadOnly(TempModuleOptions.forDefaultModule()); tmpModel.addRootNode(type); TemporaryModels.getInstance().addMissingImports(tmpModel); } // do something with the node } finally { undo-transparent command with this.mpsProject.getRepository() { tmpModel.removeRootNode(type); TemporaryModels.getInstance().dispose(tmpModel); } } How to I add widgets to the status bar? (memory indicator, save transient models...) Have a look at this answer . Make sure to call this code from a project plugin . How to I display a message in the status bar? (left bottom corner) Note: The message might not be visible by calling from the console, because the rebuild of the model already shows a message: WindowManager.getInstance().getStatusBar(ProjectHelper.toIdeaProject(#project)) https://mps-support.jetbrains.com/hc/en-us/community/posts/115000568670-Create-and-access-a-single-Preference-Component-which-is-common-for-all-projects \u21a9","title":"CoreComponent"},{"location":"gotchas/mps_internal/gui/","text":"Where can I find an overview of the user interface? It can be found in the IntelliJ IDEA documentation . A more technical explanation can be found in the IntelliJ Platform Plugin SDK documentation . How do I add messages to the right side of the window? In IntelliJ IDEA it is called error stripe , in MPS MessagesGutter : jetbrains . mps . nodeEditor . EditorComponent component = (( EditorComponent ) editorContext . getEditorComponent ()); NodeHighlightManager highlightManager = component . getHighlightManager (); highlightManager . mark ( message ); How can I add things to the left of the editor? (e.g. breakpoints, go subclasses etc.) The component is called LeftEditorHighlighter . A checker has to be implemented that can show messages in this component (example: OverrideMethodsChecker ). How to I add an icon to the status bar? Have a look at the the implementation of the transient models widget and its initialisation in TransientModelsNotification . What parts of the IntelliJ Platform SDK can't be used in MPS because they are not supported? Everything related to text files: Documents , PSI files , Templates , QuickDoc, IDE Features Trainer , CodeSmellDetector and Custom Language Support .","title":"GUI"},{"location":"gotchas/plugins/","text":"Where can I use my languages that I have created? 1 The main platform is MPS itself, or a custom IDE based on MPS (so called RCP). Are MPS language often used as plugins in Intellij IDEs instead of MPS itself? (an IntelliJ IDEA plugin, not custom RCP) No, this functionality is not used very often. How can I find plugins on the JetBrains Marketplace that are usable in MPS? Searching for the word MPS in all categories should do the trick. MPS forum - Plugin \u21a9","title":"Plugins"},{"location":"reference/actions/","text":"CommonDataKeys \u00b6 name description Available in MPS CARET Returns caret instance (in host or injected editor, depending on context). EDITOR Returns currently focused editor instance. EDITOR_EVEN_IF_INACTIVE Returns editor even if focus currently is in find bar. EDITOR_VIRTUAL_SPACE Returns whether the current location relates to a virtual space in an editor. HOST_EDITOR Returns reference to host editor instance, in case EDITOR key is referring to an injected editor. NAVIGATABLE Returns Navigatable instance. NAVIGATABLE_ARRAY Returns several navigatables, e.g. PROJECT Returns project if project node is selected (in project view) PSI_ELEMENT Returns PsiElement instance. PSI_FILE Returns currently selected PsiFile instance. VIRTUAL_FILE Returns VirtualFile instance. VIRTUAL_FILE_ARRAY Returns several VirtualFile instances, e.g. PlatformDataKeys \u00b6 name description Available in MPS ACTIONS_SORTER Deprecated. use ActionPromoter CONTENT_MANAGER CONTEXT_COMPONENT Returns Component currently in focus, DataContext should be retrieved for. CONTEXT_MENU_POINT Returns Point to guess where to show context menu invoked by key. COPY_PROVIDER CUT_PROVIDER DELETE_ELEMENT_PROVIDER DOMINANT_HINT_AREA_RECTANGLE EXPORTER_TO_TEXT_FILE FILE_EDITOR FILE_TEXT Returns the text of currently selected file/file revision HELP_ID Returns help id. IS_MODAL_CONTEXT Returns Boolean.TRUE if action is executed in modal context and Boolean.FALSE if action is executed not in modal context. MODALITY_STATE NONEMPTY_CONTENT_MANAGER PASTE_PROVIDER PREDEFINED_TEXT PROJECT_CONTEXT Returns project if project node is selected (in project view) PROJECT_FILE_DIRECTORY SEARCH_INPUT_TEXT SELECTED_ITEM Returns single selection item. SELECTED_ITEMS Returns multi selection items. SOURCE_NAVIGATION_LOCKED SPEED_SEARCH_COMPONENT STATUS_BAR TOOL_WINDOW TREE_EXPANDER UI_DISPOSABLE","title":"Actions"},{"location":"reference/actions/#commondatakeys","text":"name description Available in MPS CARET Returns caret instance (in host or injected editor, depending on context). EDITOR Returns currently focused editor instance. EDITOR_EVEN_IF_INACTIVE Returns editor even if focus currently is in find bar. EDITOR_VIRTUAL_SPACE Returns whether the current location relates to a virtual space in an editor. HOST_EDITOR Returns reference to host editor instance, in case EDITOR key is referring to an injected editor. NAVIGATABLE Returns Navigatable instance. NAVIGATABLE_ARRAY Returns several navigatables, e.g. PROJECT Returns project if project node is selected (in project view) PSI_ELEMENT Returns PsiElement instance. PSI_FILE Returns currently selected PsiFile instance. VIRTUAL_FILE Returns VirtualFile instance. VIRTUAL_FILE_ARRAY Returns several VirtualFile instances, e.g.","title":"CommonDataKeys"},{"location":"reference/actions/#platformdatakeys","text":"name description Available in MPS ACTIONS_SORTER Deprecated. use ActionPromoter CONTENT_MANAGER CONTEXT_COMPONENT Returns Component currently in focus, DataContext should be retrieved for. CONTEXT_MENU_POINT Returns Point to guess where to show context menu invoked by key. COPY_PROVIDER CUT_PROVIDER DELETE_ELEMENT_PROVIDER DOMINANT_HINT_AREA_RECTANGLE EXPORTER_TO_TEXT_FILE FILE_EDITOR FILE_TEXT Returns the text of currently selected file/file revision HELP_ID Returns help id. IS_MODAL_CONTEXT Returns Boolean.TRUE if action is executed in modal context and Boolean.FALSE if action is executed not in modal context. MODALITY_STATE NONEMPTY_CONTENT_MANAGER PASTE_PROVIDER PREDEFINED_TEXT PROJECT_CONTEXT Returns project if project node is selected (in project view) PROJECT_FILE_DIRECTORY SEARCH_INPUT_TEXT SELECTED_ITEM Returns single selection item. SELECTED_ITEMS Returns multi selection items. SOURCE_NAVIGATION_LOCKED SPEED_SEARCH_COMPONENT STATUS_BAR TOOL_WINDOW TREE_EXPANDER UI_DISPOSABLE","title":"PlatformDataKeys"},{"location":"reference/exceptions/","text":"For a list of common Java exceptions have a look at The Exception Hierarchy and Types of Exception in Java with Examples . The JavaDoc for all exception can be found by searching this list . Some additional information for exceptions that often occur in MPS: java.util.ConcurrentModificationException java.lang.NullPointerException What does the dollar sign in error messages mean? This indicates an anomyous class ( more information ). MPS \u00b6 name example description jetbrains.mps.build.mps.util.ModuleLoaderException none Deprecated exception that is not thrown anymore since 2017. jetbrains.mps.smodel.persistence.def.ModelReadException *.mps file is corrupt Indicates failure to read model. Is not specific to 'default' persistence. jetbrains.mps.smodel.IllegalModelAccessException accessing a model from a swing button handler (e.g. you can read model only inside read actions) Indicates forbidden operations over a SModel/SNode ( official documentation ). AssertionError: Taking target node of dynamic reference whose source node is not in a model a node is in detached state The source of a dynamic reference doesn't belong to a model. Position n is not allowed for X The caret is the first position but the first position was disabled in the style. The caret is at a position that is not allowed. ModuleClassLoaderIsDisposedException a module couldn't be disposed and it is loaded again The classloader of a module is disposed. ClassLoader of module could not be found A module can't be loaded because the classloader can't be found. Intellij Platform \u00b6 name example description com.intellij.diagnostic.PluginException usage of deprecated Intellij SDK methods Represents an internal error caused by a plugin. It may happen if the plugin's code fails with an exception, or if the plugin violates some contract of IntelliJ Platform. AlreadyDisposedException An already disposed objects gets disposed again (e.g. a Project) Exception from class SlowOperations ticket If you get an exception from this method, then you need to move the computation to the background while also trying to avoid blocking the UI thread as well. Argument for @NotNull parameter must not be null method with @NotNull Annotation is called with null A null check failed ( official documentation ). Action dispatch failed. The execution of an action failed. ExtensionInstantiationException This exception is thrown if some extension (service, extension point) failed to initialize.","title":"Exceptions"},{"location":"reference/exceptions/#mps","text":"name example description jetbrains.mps.build.mps.util.ModuleLoaderException none Deprecated exception that is not thrown anymore since 2017. jetbrains.mps.smodel.persistence.def.ModelReadException *.mps file is corrupt Indicates failure to read model. Is not specific to 'default' persistence. jetbrains.mps.smodel.IllegalModelAccessException accessing a model from a swing button handler (e.g. you can read model only inside read actions) Indicates forbidden operations over a SModel/SNode ( official documentation ). AssertionError: Taking target node of dynamic reference whose source node is not in a model a node is in detached state The source of a dynamic reference doesn't belong to a model. Position n is not allowed for X The caret is the first position but the first position was disabled in the style. The caret is at a position that is not allowed. ModuleClassLoaderIsDisposedException a module couldn't be disposed and it is loaded again The classloader of a module is disposed. ClassLoader of module could not be found A module can't be loaded because the classloader can't be found.","title":"MPS"},{"location":"reference/exceptions/#intellij-platform","text":"name example description com.intellij.diagnostic.PluginException usage of deprecated Intellij SDK methods Represents an internal error caused by a plugin. It may happen if the plugin's code fails with an exception, or if the plugin violates some contract of IntelliJ Platform. AlreadyDisposedException An already disposed objects gets disposed again (e.g. a Project) Exception from class SlowOperations ticket If you get an exception from this method, then you need to move the computation to the background while also trying to avoid blocking the UI thread as well. Argument for @NotNull parameter must not be null method with @NotNull Annotation is called with null A null check failed ( official documentation ). Action dispatch failed. The execution of an action failed. ExtensionInstantiationException This exception is thrown if some extension (service, extension point) failed to initialize.","title":"Intellij Platform"},{"location":"reference/icons/","text":"Actions \u00b6 Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-actions-addToVcs: :mps-actions-groupByCategory: :mps-actions-groupByModel: :mps-actions-groupByModule: :mps-actions-groupByRoot: :mps-actions-groupSearched: :mps-actions-importModulesFromFolder: :mps-actions-migrationBulb: :mps-actions-searchedNodes: :mps-actions-showCellInExplorer: :mps-actions-showOnlyStrongSubtypes: Ant \u00b6 Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-ant-build: Cell explorer \u00b6 Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-cellExplorer-cellActionKey: :mps-cellExplorer-cellComponent: :mps-cellExplorer-cellConst: :mps-cellExplorer-cellDefault: :mps-cellExplorer-cellError: :mps-cellExplorer-cellExplorer: :mps-cellExplorer-cellKeyMap: :mps-cellExplorer-cellProperty: :mps-cellExplorer-cells: Ant \u00b6 Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-debugger-addBreakpoint: :mps-debugger-deleteBreakpoint: :mps-debugger-goToSource: General \u00b6 Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-general-dependencies: :mps-general-generatorsPriorities: :mps-general-java: :mps-general-modelChecker: :mps-general-runtime: :mps-general-usedLanguages: Generator \u00b6 Code Icon :mps-generator-copy-operation: :mps-generator-input: :mps-generator-macro: :mps-generator-mapping-script: :mps-generator-output: :mps-generator-rule: :mps-generator-rule-consequence: :mps-generator-switch: :mps-generator-template: Idea Integration \u00b6 Code Icon :mps-ideaIntegration-connected: :mps-ideaIntegration-connected_with_errors: :mps-ideaIntegration-disconnected: :mps-ideaIntegration-trying: Nodes/Models \u00b6 Models \u00b6 Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-nodes-models-accessoryModel: :mps-nodes-models-aspect: :mps-nodes-models-templatesModel: :mps-nodes-models-tests: Nodes \u00b6 Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-nodes-action: :mps-nodes-behavior: :mps-nodes-constraint: :mps-nodes-dataFlow: :mps-nodes-default: :mps-nodes-devkit: :mps-nodes-editor: :mps-nodes-generator: :mps-nodes-language: :mps-nodes-mappingConf: :mps-nodes-model: :mps-nodes-node: :mps-nodes-projectModels: :mps-nodes-reduction: :mps-nodes-refactoring: :mps-nodes-rootNode: :mps-nodes-rule: :mps-nodes-solution: :mps-nodes-structure: :mps-nodes-textGen: :mps-nodes-transient: :mps-nodes-transientDisable: :mps-nodes-action: :mps-nodes-action: :mps-nodes-action: Project Pane \u00b6 Code Icon Icon_2x :mps-projectPane-logicalView: Public \u00b6 Code Icon Icon_2x :mps-public-about: :mps-public-error: :mps-public-mps: MPS2 :mps-public-mps_16: :mps-public-MPS_welcomeScreen: :mps-public-splash: Tool Windows \u00b6 Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-toolWindows-cellExplorer: :mps-toolWindows-default: :mps-toolWindows-modelChecker: :mps-toolWindows-OpenTerminal_13x13: :mps-toolWindows-typeTraceView:","title":"Icons"},{"location":"reference/icons/#actions","text":"Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-actions-addToVcs: :mps-actions-groupByCategory: :mps-actions-groupByModel: :mps-actions-groupByModule: :mps-actions-groupByRoot: :mps-actions-groupSearched: :mps-actions-importModulesFromFolder: :mps-actions-migrationBulb: :mps-actions-searchedNodes: :mps-actions-showCellInExplorer: :mps-actions-showOnlyStrongSubtypes:","title":"Actions"},{"location":"reference/icons/#ant","text":"Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-ant-build:","title":"Ant"},{"location":"reference/icons/#cell-explorer","text":"Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-cellExplorer-cellActionKey: :mps-cellExplorer-cellComponent: :mps-cellExplorer-cellConst: :mps-cellExplorer-cellDefault: :mps-cellExplorer-cellError: :mps-cellExplorer-cellExplorer: :mps-cellExplorer-cellKeyMap: :mps-cellExplorer-cellProperty: :mps-cellExplorer-cells:","title":"Cell explorer"},{"location":"reference/icons/#ant_1","text":"Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-debugger-addBreakpoint: :mps-debugger-deleteBreakpoint: :mps-debugger-goToSource:","title":"Ant"},{"location":"reference/icons/#general","text":"Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-general-dependencies: :mps-general-generatorsPriorities: :mps-general-java: :mps-general-modelChecker: :mps-general-runtime: :mps-general-usedLanguages:","title":"General"},{"location":"reference/icons/#generator","text":"Code Icon :mps-generator-copy-operation: :mps-generator-input: :mps-generator-macro: :mps-generator-mapping-script: :mps-generator-output: :mps-generator-rule: :mps-generator-rule-consequence: :mps-generator-switch: :mps-generator-template:","title":"Generator"},{"location":"reference/icons/#idea-integration","text":"Code Icon :mps-ideaIntegration-connected: :mps-ideaIntegration-connected_with_errors: :mps-ideaIntegration-disconnected: :mps-ideaIntegration-trying:","title":"Idea Integration"},{"location":"reference/icons/#nodesmodels","text":"","title":"Nodes/Models"},{"location":"reference/icons/#models","text":"Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-nodes-models-accessoryModel: :mps-nodes-models-aspect: :mps-nodes-models-templatesModel: :mps-nodes-models-tests:","title":"Models"},{"location":"reference/icons/#nodes","text":"Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-nodes-action: :mps-nodes-behavior: :mps-nodes-constraint: :mps-nodes-dataFlow: :mps-nodes-default: :mps-nodes-devkit: :mps-nodes-editor: :mps-nodes-generator: :mps-nodes-language: :mps-nodes-mappingConf: :mps-nodes-model: :mps-nodes-node: :mps-nodes-projectModels: :mps-nodes-reduction: :mps-nodes-refactoring: :mps-nodes-rootNode: :mps-nodes-rule: :mps-nodes-solution: :mps-nodes-structure: :mps-nodes-textGen: :mps-nodes-transient: :mps-nodes-transientDisable: :mps-nodes-action: :mps-nodes-action: :mps-nodes-action:","title":"Nodes"},{"location":"reference/icons/#project-pane","text":"Code Icon Icon_2x :mps-projectPane-logicalView:","title":"Project Pane"},{"location":"reference/icons/#public","text":"Code Icon Icon_2x :mps-public-about: :mps-public-error: :mps-public-mps: MPS2 :mps-public-mps_16: :mps-public-MPS_welcomeScreen: :mps-public-splash:","title":"Public"},{"location":"reference/icons/#tool-windows","text":"Code Icon Icon_2x Icon_dark Icon_2x_dark :mps-toolWindows-cellExplorer: :mps-toolWindows-default: :mps-toolWindows-modelChecker: :mps-toolWindows-OpenTerminal_13x13: :mps-toolWindows-typeTraceView:","title":"Tool Windows"}]}